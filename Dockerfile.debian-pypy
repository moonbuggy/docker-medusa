ARG PYPY_VERSION="3.7"

ARG FROM_IMAGE="moonbuggy2000/debian-slim-s6-pypy:${PYPY_VERSION}"

ARG MEDUSA_COMMIT_BRANCH="master"
ARG MEDUSA_COMMIT_HASH="c302d8ae089a3c41eb8dda166cb71f9a4b39b79e"

ARG APP_PATH="/app"
ARG PUID=1000
ARG PGID=1000

ARG TARGET_ARCH_TAG="amd64"

## get the source code
#
FROM moonbuggy2000/fetcher:latest AS source

ARG MEDUSA_COMMIT_HASH

WORKDIR /source

RUN git init -q \
	&& git remote add origin https://github.com/pymedusa/Medusa.git \
	&& git fetch --depth=1 origin "${MEDUSA_COMMIT_HASH}" \
	&& git reset --hard FETCH_HEAD \
	&& rm -rf $(cat .dockerignore)

## build the image
#
FROM "${FROM_IMAGE}" AS builder

# QEMU static binaries from pre_build
ARG QEMU_DIR=""
ARG QEMU_ARCH=""
COPY _dummyfile "${QEMU_DIR}/qemu-${QEMU_ARCH}-static*" /usr/bin/

ARG APP_PATH
ARG PUID
ARG PGID

ARG MEDUSA_COMMIT_BRANCH
ARG MEDUSA_COMMIT_HASH

WORKDIR "${APP_PATH}"

# Install packages
RUN apt-get update \
	&& apt-get install -qy --no-install-recommends \
		ca-certificates \
		git-core \
		libsqlite3-0 \
		mediainfo \
		openssl \
		tzdata \
		unrar-free \
		wget \
	# Cleanup \
#	&& apt-get remove --purge -qy git-core \
	&& rm -rf /var/lib/apt/lists/*

# Set some environment variables via cont-init.d
RUN add-contenv \
	# PATH="${APP_PATH}:${PATH}" \
	APP_PATH="${APP_PATH}" \
	PYTHON_INTERPRETER="pypy3" \
	MEDUSA_COMMIT_BRANCH="${MEDUSA_COMMIT_BRANCH}" \
	MEDUSA_COMMIT_HASH="${MEDUSA_COMMIT_HASH}" \
	LANG=C.UTF-8

# Add user and group
RUN useradd -MU -u 1000 medusa

COPY --from=source --chown=medusa:medusa /source/ ./
COPY ./etc /etc

# determine the s6 overlay major version in use, remove any uneeded config
#   v2.* uses /etc/s6,  v3.* uses /etc/s6-overlay
RUN if [ -d "/etc/s6" ]; then \
    rm -rvf /etc/s6-overlay 2>/dev/null; \
  elif [ -d "/etc/s6-overlay" ]; then \
    rm -rvf /etc/cont-init.d /etc/services.d /etc/fix-attrs.d 2>/dev/null; \
  fi

RUN rm -f "/usr/bin/qemu-${QEMU_ARCH}-static" >/dev/null 2>&1


## drop QEMU static binaries
#
FROM "moonbuggy2000/scratch:${TARGET_ARCH_TAG}"

COPY --from=builder / /

ARG PUID
ARG PGID
ARG APP_PATH

ENV PUID="${PUID}" \
	PGID="${PGID}" \
	PATH="${APP_PATH}:${PATH}"

EXPOSE 8081

VOLUME /config /downloads /tv /anime

ENTRYPOINT [ "/init" ]

HEALTHCHECK --start-period=30s --timeout=10s \
	CMD wget --quiet --tries=1 http://127.0.0.1:8081/ -O /dev/null || exit 1
